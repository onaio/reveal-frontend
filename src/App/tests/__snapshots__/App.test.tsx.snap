// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders App correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Router
    history={
      Object {
        "action": "REPLACE",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "7x1qvc",
          "pathname": "/login",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <App>
      <Container
        tag="div"
      >
        <div
          className="container"
        >
          <Connect(withRouter(HeaderComponent))>
            <withRouter(HeaderComponent)
              authenticated={false}
              logOutUser={[Function]}
              user={
                Object {
                  "email": "",
                  "gravatar": "",
                  "name": "",
                  "username": "",
                }
              }
            >
              <Route>
                <HeaderComponent
                  authenticated={false}
                  history={
                    Object {
                      "action": "REPLACE",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "7x1qvc",
                        "pathname": "/login",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "key": "7x1qvc",
                      "pathname": "/login",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  logOutUser={[Function]}
                  match={
                    Object {
                      "isExact": false,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  user={
                    Object {
                      "email": "",
                      "gravatar": "",
                      "name": "",
                      "username": "",
                    }
                  }
                >
                  <div>
                    <Navbar
                      color="light"
                      expand="md"
                      light={true}
                      tag="nav"
                    >
                      <nav
                        className="navbar navbar-expand-md navbar-light bg-light"
                      >
                        <nav
                          className="navbar navbar-expand-md navbar-light bg-light"
                        >
                          <Link
                            className="navbar-brand"
                            replace={false}
                            to="/"
                          >
                            <a
                              className="navbar-brand"
                              href="/"
                              onClick={[Function]}
                            >
                              <img
                                alt="Reveal"
                                src="logo.png"
                              />
                            </a>
                          </Link>
                        </nav>
                        <NavbarToggler
                          onClick={[Function]}
                          tag="button"
                          type="button"
                        >
                          <button
                            className="navbar-toggler"
                            onClick={[Function]}
                            type="button"
                          >
                            <span
                              className="navbar-toggler-icon"
                            />
                          </button>
                        </NavbarToggler>
                        <Collapse
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          isOpen={false}
                          mountOnEnter={false}
                          navbar={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          tag="div"
                          timeout={350}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={350}
                            unmountOnExit={false}
                          >
                            <div
                              className="collapse navbar-collapse"
                              style={Object {}}
                            >
                              <Nav
                                className="mr-auto"
                                navbar={true}
                                tag="ul"
                                vertical={false}
                              >
                                <ul
                                  className="mr-auto navbar-nav"
                                >
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="nav-link"
                                        to="/"
                                      >
                                        <Route
                                          path="\\\\/"
                                        >
                                          <Link
                                            aria-current="page"
                                            className="nav-link active"
                                            replace={false}
                                            style={Object {}}
                                            to="/"
                                          >
                                            <a
                                              aria-current="page"
                                              className="nav-link active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              Home
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </li>
                                  </NavItem>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="nav-link"
                                        to="/irs"
                                      >
                                        <Route
                                          path="\\\\/irs"
                                        >
                                          <Link
                                            aria-current={null}
                                            className="nav-link"
                                            replace={false}
                                            to="/irs"
                                          >
                                            <a
                                              aria-current={null}
                                              className="nav-link"
                                              href="/irs"
                                              onClick={[Function]}
                                            >
                                              IRS
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </li>
                                  </NavItem>
                                  <UncontrolledDropdown
                                    inNavbar={true}
                                    nav={true}
                                  >
                                    <Dropdown
                                      active={false}
                                      addonType={false}
                                      direction="down"
                                      inNavbar={true}
                                      isOpen={false}
                                      nav={true}
                                      setActiveFromChild={false}
                                      toggle={[Function]}
                                    >
                                      <Manager
                                        className="dropdown nav-item"
                                        onKeyDown={[Function]}
                                        tag="li"
                                      >
                                        <li
                                          className="dropdown nav-item"
                                          onKeyDown={[Function]}
                                        >
                                          <DropdownToggle
                                            aria-haspopup={true}
                                            caret={true}
                                            className="nav-link"
                                            color="secondary"
                                            nav={true}
                                          >
                                            <a
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              className="nav-link dropdown-toggle nav-link"
                                              href="#"
                                              onClick={[Function]}
                                            >
                                              Focus Investigation
                                            </a>
                                          </DropdownToggle>
                                          <DropdownMenu
                                            flip={true}
                                            right={true}
                                            tag="div"
                                          >
                                            <div
                                              aria-hidden={true}
                                              className="dropdown-menu dropdown-menu-right"
                                              role="menu"
                                              tabIndex="-1"
                                            >
                                              <DropdownItem
                                                tag="button"
                                                toggle={true}
                                              >
                                                <button
                                                  className="dropdown-item"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex="0"
                                                  type="button"
                                                >
                                                  <NavLink
                                                    activeClassName="active"
                                                    aria-current="page"
                                                    className="nav-link"
                                                    to="/focus-investigation"
                                                  >
                                                    <Route
                                                      path="\\\\/focus-investigation"
                                                    >
                                                      <Link
                                                        aria-current={null}
                                                        className="nav-link"
                                                        replace={false}
                                                        to="/focus-investigation"
                                                      >
                                                        <a
                                                          aria-current={null}
                                                          className="nav-link"
                                                          href="/focus-investigation"
                                                          onClick={[Function]}
                                                        >
                                                          Active
                                                        </a>
                                                      </Link>
                                                    </Route>
                                                  </NavLink>
                                                </button>
                                              </DropdownItem>
                                              <DropdownItem
                                                tag="button"
                                                toggle={true}
                                              >
                                                <button
                                                  className="dropdown-item"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex="0"
                                                  type="button"
                                                >
                                                  <NavLink
                                                    activeClassName="active"
                                                    aria-current="page"
                                                    className="nav-link"
                                                    to="/focus-investigation/historical"
                                                  >
                                                    <Route
                                                      path="\\\\/focus-investigation\\\\/historical"
                                                    >
                                                      <Link
                                                        aria-current={null}
                                                        className="nav-link"
                                                        replace={false}
                                                        to="/focus-investigation/historical"
                                                      >
                                                        <a
                                                          aria-current={null}
                                                          className="nav-link"
                                                          href="/focus-investigation/historical"
                                                          onClick={[Function]}
                                                        >
                                                          Historical
                                                        </a>
                                                      </Link>
                                                    </Route>
                                                  </NavLink>
                                                </button>
                                              </DropdownItem>
                                            </div>
                                          </DropdownMenu>
                                        </li>
                                      </Manager>
                                    </Dropdown>
                                  </UncontrolledDropdown>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="nav-link"
                                        to="/404"
                                      >
                                        <Route
                                          path="\\\\/404"
                                        >
                                          <Link
                                            aria-current={null}
                                            className="nav-link"
                                            replace={false}
                                            to="/404"
                                          >
                                            <a
                                              aria-current={null}
                                              className="nav-link"
                                              href="/404"
                                              onClick={[Function]}
                                            >
                                              Users
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </li>
                                  </NavItem>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="nav-link"
                                        to="/404"
                                      >
                                        <Route
                                          path="\\\\/404"
                                        >
                                          <Link
                                            aria-current={null}
                                            className="nav-link"
                                            replace={false}
                                            to="/404"
                                          >
                                            <a
                                              aria-current={null}
                                              className="nav-link"
                                              href="/404"
                                              onClick={[Function]}
                                            >
                                              About
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </li>
                                  </NavItem>
                                </ul>
                              </Nav>
                              <Nav
                                className="ml-0"
                                navbar={true}
                                tag="ul"
                                vertical={false}
                              >
                                <ul
                                  className="ml-0 navbar-nav"
                                >
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    className="nav-link"
                                    to="/login"
                                  >
                                    <Route
                                      path="\\\\/login"
                                    >
                                      <Link
                                        aria-current="page"
                                        className="nav-link active"
                                        replace={false}
                                        style={Object {}}
                                        to="/login"
                                      >
                                        <a
                                          aria-current="page"
                                          className="nav-link active"
                                          href="/login"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          Login
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                </ul>
                              </Nav>
                            </div>
                          </Transition>
                        </Collapse>
                      </nav>
                    </Navbar>
                  </div>
                </HeaderComponent>
              </Route>
            </withRouter(HeaderComponent)>
          </Connect(withRouter(HeaderComponent))>
          <Row
            id="main-page-row"
            tag="div"
          >
            <div
              className="row"
              id="main-page-row"
            >
              <Col
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <div
                  className="col"
                >
                  <Switch>
                    <Route
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/login",
                          "url": "/login",
                        }
                      }
                      exact={true}
                      location={
                        Object {
                          "hash": "",
                          "key": "7x1qvc",
                          "pathname": "/login",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      path="/login"
                      render={[Function]}
                    >
                      <OauthLogin
                        ProviderLinksComponent={[Function]}
                        history={
                          Object {
                            "action": "REPLACE",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "7x1qvc",
                              "pathname": "/login",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "7x1qvc",
                            "pathname": "/login",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/login",
                            "url": "/login",
                          }
                        }
                        providers={
                          Object {
                            "Ona": Object {
                              "accessTokenUri": "https://stage-api.ona.io/o/token/",
                              "authorizationUri": "https://stage-api.ona.io/o/authorize/",
                              "clientId": "iDWxqlTdUNUtGd3MIjxsI8HcICSjsRwHfy1LKvzF",
                              "redirectUri": "http://localhost:3000/oauth/callback/Ona/",
                              "scopes": Array [
                                "read",
                                "write",
                              ],
                              "state": "onadata",
                              "userUri": "https://stage-api.ona.io/api/v1/user.json",
                            },
                            "OpenSRP": Object {
                              "accessTokenUri": "https://reveal-stage.smartregister.org/opensrp/oauth/token",
                              "authorizationUri": "https://reveal-stage.smartregister.org/opensrp/oauth/authorize",
                              "clientId": "52vjwavfeLkMxZArGorgAoExwicfDGb49rVy",
                              "redirectUri": "http://localhost:3000/oauth/callback/OpenSRP/",
                              "scopes": Array [
                                "read",
                                "write",
                              ],
                              "state": "opensrp",
                              "userUri": "https://reveal-stage.smartregister.org/opensrp/user-details",
                            },
                          }
                        }
                      >
                        <ProviderLinks
                          providers={
                            Object {
                              "Ona": Object {
                                "accessTokenUri": "https://stage-api.ona.io/o/token/",
                                "authorizationUri": "https://stage-api.ona.io/o/authorize/",
                                "clientId": "iDWxqlTdUNUtGd3MIjxsI8HcICSjsRwHfy1LKvzF",
                                "redirectUri": "http://localhost:3000/oauth/callback/Ona/",
                                "scopes": Array [
                                  "read",
                                  "write",
                                ],
                                "state": "onadata",
                                "userUri": "https://stage-api.ona.io/api/v1/user.json",
                              },
                              "OpenSRP": Object {
                                "accessTokenUri": "https://reveal-stage.smartregister.org/opensrp/oauth/token",
                                "authorizationUri": "https://reveal-stage.smartregister.org/opensrp/oauth/authorize",
                                "clientId": "52vjwavfeLkMxZArGorgAoExwicfDGb49rVy",
                                "redirectUri": "http://localhost:3000/oauth/callback/OpenSRP/",
                                "scopes": Array [
                                  "read",
                                  "write",
                                ],
                                "state": "opensrp",
                                "userUri": "https://reveal-stage.smartregister.org/opensrp/user-details",
                              },
                            }
                          }
                        >
                          <div
                            className="gatekeeper-login"
                          >
                            <p
                              className="gatekeeper-p"
                            >
                              Please log in with one of the following providers
                            </p>
                            <p
                              className="gatekeeper-p item"
                              key="OpenSRP"
                            >
                              <a
                                className="gatekeeper-btn"
                                href="https://reveal-stage.smartregister.org/opensrp/oauth/authorize?client_id=52vjwavfeLkMxZArGorgAoExwicfDGb49rVy&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Foauth%2Fcallback%2FOpenSRP%2F&scope=read%20write&response_type=token&state=opensrp"
                              >
                                OpenSRP
                              </a>
                            </p>
                            <p
                              className="gatekeeper-p item"
                              key="Ona"
                            >
                              <a
                                className="gatekeeper-btn"
                                href="https://stage-api.ona.io/o/authorize/?client_id=iDWxqlTdUNUtGd3MIjxsI8HcICSjsRwHfy1LKvzF&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Foauth%2Fcallback%2FOna%2F&scope=read%20write&response_type=token&state=onadata"
                              >
                                Ona
                              </a>
                            </p>
                          </div>
                        </ProviderLinks>
                      </OauthLogin>
                    </Route>
                  </Switch>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </Container>
    </App>
  </Router>
</Provider>
`;
