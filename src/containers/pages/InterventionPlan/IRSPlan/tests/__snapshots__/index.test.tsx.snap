// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/pages/IRS/plan renders IRS Plan page correctly 1`] = `
<IrsPlan
  allJurisdictionIds={Array []}
  assignmentsArray={Array []}
  fetchAllJurisdictionIdsActionCreator={[Function]}
  fetchAssignmentsActionCreator={[Function]}
  fetchJurisdictionsActionCreator={[Function]}
  fetchOrganizationsActionCreator={[Function]}
  fetchPlansActionCreator={[Function]}
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  isDraftPlan={null}
  isFinalizedPlan={null}
  isNewPlan={false}
  jurisdictionsById={Object {}}
  loadedJurisdictionIds={Array []}
  location={[MockFunction]}
  match={
    Object {
      "isExact": true,
      "params": Object {
        "id": "ed2b4b7c-3388-53d9-b9f6-6a19d1ffde1f",
      },
      "path": "/intervention/irs/plan/:id",
      "url": "/intervention/irs/plan/ed2b4b7c-3388-53d9-b9f6-6a19d1ffde1f",
    }
  }
  organizationsById={Object {}}
  planById={null}
  planId="ed2b4b7c-3388-53d9-b9f6-6a19d1ffde1f"
  supersetService={[Function]}
>
  <Ripple
    borderColor="#ff5d00"
    borderStyle="solid"
    borderWidth="4px"
    height="64px"
    minHeight="80vh"
    width="64px"
  >
    <div
      className="lds-ripple-parent"
      style={
        Object {
          "minHeight": "80vh",
        }
      }
    >
      <div
        className="lds-ripple"
        style={
          Object {
            "height": "64px",
            "width": "64px",
          }
        }
      >
        <div
          style={
            Object {
              "borderColor": "#ff5d00",
              "borderStyle": "solid",
              "borderWidth": "4px",
            }
          }
        />
        <div
          style={
            Object {
              "borderColor": "#ff5d00",
              "borderStyle": "solid",
              "borderWidth": "4px",
            }
          }
        />
      </div>
    </div>
  </Ripple>
</IrsPlan>
`;

exports[`containers/pages/IRS/plan renders correctly if props.planById.plan_status is draft: DrillDownTable props 1`] = `
Object {
  "CellComponent": [Function],
  "columns": Array [
    Object {
      "Header": [Function],
      "accessor": [Function],
      "disableSortBy": true,
      "id": "jurisdiction_selection",
      "maxWidth": 24,
    },
    Object {
      "Header": "Name",
      "accessor": [Function],
      "id": "name",
    },
    Object {
      "Header": "Type",
      "accessor": [Function],
      "id": "jurisdiction-type",
    },
  ],
  "data": Array [
    Object {
      "assignedTeams": Array [],
      "geographic_level": 2,
      "id": "2942",
      "isChildless": true,
      "isPartiallySelected": false,
      "jurisdiction_id": "2942",
      "name": "1B - 2942",
      "parent_id": "1B",
      "planId": "0230f9e8-1f30-5e91-8693-4c993661785e",
    },
  ],
  "hasChildren": [Function],
  "identifierField": "jurisdiction_id",
  "linkerField": "name",
  "loading": false,
  "loadingComponent": [Function],
  "paginate": false,
  "parentIdentifierField": "parent_id",
  "renderNullDataComponent": [Function],
  "resize": true,
  "rootParentId": "2942",
  "showPagination": false,
  "useDrillDown": true,
}
`;

exports[`containers/pages/IRS/plan renders correctly if props.planById.plan_status is draft: GisidaWrapper props 1`] = `
Object {
  "bounds": Array [
    28.20209213900005,
    -15.549759923999941,
    28.488907821000048,
    -15.31976316599997,
  ],
  "currentGoal": null,
  "geoData": null,
  "goal": null,
  "handlers": Array [
    Object {
      "method": [Function],
      "name": "Lusaka-fill-drilldown",
      "type": "click",
    },
    Object {
      "method": [Function],
      "name": "drill-up-handler",
      "type": "click",
    },
  ],
  "layers": Array [],
  "pointFeatureCollection": null,
  "polygonFeatureCollection": null,
  "structures": null,
}
`;

exports[`containers/pages/IRS/plan renders correctly if props.planById.plan_status is draft: component props 1`] = `
Object {
  "children": <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(IrsPlan)
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={[MockFunction]}
      match={
        Object {
          "isExact": true,
          "params": Object {
            "id": "0230f9e8-1f30-5e91-8693-4c993661785e",
          },
          "path": "/intervention/irs/plan/:id",
          "url": "/intervention/irs/plan/0230f9e8-1f30-5e91-8693-4c993661785e",
        }
      }
      supersetService={
        [MockFunction] {
          "calls": Array [
            Array [
              471,
              Object {
                "row_limit": 3000,
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        }
      }
    />
  </Router>,
  "store": Object {
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
    Symbol(observable): [Function],
  },
}
`;
