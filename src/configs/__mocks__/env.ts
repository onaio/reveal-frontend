/** You can hard code variables that would have been
 * extracted from the environment here, and then mock
 * this file from your test file.
 * The goal is to have consistent test results
 */

export const SUPERSET_PLANS_SLICE = 0;
export type SUPERSET_PLANS_SLICE = typeof SUPERSET_PLANS_SLICE;

export const SUPERSET_MAX_RECORDS = 3000;
export type SUPERSET_MAX_RECORDS = typeof SUPERSET_MAX_RECORDS;

export const GISIDA_TIMEOUT = 3000;
export type GISIDA_TIMEOUT = typeof GISIDA_TIMEOUT;

export const GISIDA_MAPBOX_TOKEN = 'hunter2';
export type GISIDA_MAPBOX_TOKEN = typeof GISIDA_MAPBOX_TOKEN;

export const GISIDA_ONADATA_API_TOKEN = 'hunter2';
export type GISIDA_ONADATA_API_TOKEN = typeof GISIDA_ONADATA_API_TOKEN;

export const DIGITAL_GLOBE_CONNECT_ID = 'hunter2';
export type DIGITAL_GLOBE_CONNECT_ID = typeof DIGITAL_GLOBE_CONNECT_ID;

export const OPENSRP_API_BASE_URL = 'https://test.smartregister.org/opensrp/rest/';
export type OPENSRP_API_BASE_URL = typeof OPENSRP_API_BASE_URL;

export const PLAN_UUID_NAMESPACE = '1bb3c217-af1c-4749-b3df-4f6108582e3c';
export type PLAN_UUID_NAMESPACE = typeof PLAN_UUID_NAMESPACE;

export const ACTION_UUID_NAMESPACE = '1bb3c217-af1c-4749-b3df-4f6108582e3c';
export type ACTION_UUID_NAMESPACE = typeof ACTION_UUID_NAMESPACE;

export const GA_CODE = 'UA-154169046-1';
export type GA_CODE = typeof GA_CODE;

export const GA_ENV = 'test';
export type GA_ENV = typeof GA_ENV;

export const DEFAULT_PLAN_VERSION = '2';
export type DEFAULT_PLAN_VERSION = typeof DEFAULT_PLAN_VERSION;

export const SUPERSET_JURISDICTIONS_SLICE = 1;
export type SUPERSET_JURISDICTIONS_SLICE = typeof SUPERSET_JURISDICTIONS_SLICE;

export const SUPERSET_STRUCTURES_SLICE = 2;
export type SUPERSET_STRUCTURES_SLICE = typeof SUPERSET_STRUCTURES_SLICE;

export const SUPERSET_GOALS_SLICE = 3;
export type SUPERSET_GOALS_SLICE = typeof SUPERSET_GOALS_SLICE;

export const SUPERSET_TASKS_SLICE = 4;
export type SUPERSET_TASKS_SLICE = typeof SUPERSET_TASKS_SLICE;

export const SUPERSET_IRS_REPORTING_JURISDICTIONS_DATA_SLICES = '11,12';
export type SUPERSET_IRS_REPORTING_JURISDICTIONS_DATA_SLICES = typeof SUPERSET_IRS_REPORTING_JURISDICTIONS_DATA_SLICES;
export const SUPERSET_IRS_REPORTING_PLANS_SLICE = '13';
export type SUPERSET_IRS_REPORTING_PLANS_SLICE = typeof SUPERSET_IRS_REPORTING_PLANS_SLICE;
export const SUPERSET_IRS_REPORTING_STRUCTURES_DATA_SLICE = '14';
export type SUPERSET_IRS_REPORTING_STRUCTURES_DATA_SLICE = typeof SUPERSET_IRS_REPORTING_STRUCTURES_DATA_SLICE;
export const SUPERSET_IRS_REPORTING_JURISDICTIONS_FOCUS_AREA_LEVEL = '4';
export type SUPERSET_IRS_REPORTING_JURISDICTIONS_FOCUS_AREA_LEVEL = typeof SUPERSET_IRS_REPORTING_JURISDICTIONS_FOCUS_AREA_LEVEL;
export const SUPERSET_IRS_REPORTING_JURISDICTIONS_COLUMNS = 'zambiaJurisdictions2019';
export type SUPERSET_IRS_REPORTING_JURISDICTIONS_COLUMNS = typeof SUPERSET_IRS_REPORTING_JURISDICTIONS_COLUMNS;
export const SUPERSET_IRS_REPORTING_FOCUS_AREAS_COLUMNS = 'zambiaFocusArea2019';
export type SUPERSET_IRS_REPORTING_FOCUS_AREAS_COLUMNS = typeof SUPERSET_IRS_REPORTING_FOCUS_AREAS_COLUMNS;
export const SUPERSET_IRS_REPORTING_INDICATOR_STOPS = 'zambia2019';
export type SUPERSET_IRS_REPORTING_INDICATOR_STOPS = typeof SUPERSET_IRS_REPORTING_INDICATOR_STOPS;
export const SUPERSET_IRS_REPORTING_INDICATOR_ROWS = 'zambia2019';
export type SUPERSET_IRS_REPORTING_INDICATOR_ROWS = typeof SUPERSET_IRS_REPORTING_INDICATOR_ROWS;

export const DATE_FORMAT = 'yyyy-MM-dd';
export type DATE_FORMAT = typeof DATE_FORMAT;

export const DEFAULT_TIME = 'T00:00:00+00:00';
export type DEFAULT_TIME = typeof DEFAULT_TIME;

export const DEFAULT_PLAN_DURATION_DAYS = 20;
export type DEFAULT_PLAN_DURATION_DAYS = typeof DEFAULT_PLAN_DURATION_DAYS;

export const DEFAULT_ACTIVITY_DURATION_DAYS = 7;
export type DEFAULT_ACTIVITY_DURATION_DAYS = typeof DEFAULT_ACTIVITY_DURATION_DAYS;

export const OPENMRS_USERS_REQUEST_PAGE_SIZE = 51;
export type OPENMRS_USERS_REQUEST_PAGE_SIZE = typeof OPENMRS_USERS_REQUEST_PAGE_SIZE;

export const LANGUAGE = 'en';
export type LANGUAGE = typeof LANGUAGE;
